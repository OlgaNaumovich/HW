Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. === https://github.com/ === new === Repository name===Json26
 5. Клонировать репозиторий JSON на локальный компьютер. === git clone https://github.com/OlgaNaumovich/Json26.git 
 6. Внутри локального JSON создать файл “new.json”.=== touch new.json
 7. Добавить файл под гит.===  git add new.jsonn
 8. Закоммитить файл.=== git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий.=== git push
 10.Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
     vim new.json===i
     {"Name": "Naumovich Olga",
     "Age": 32,
     "Pets": "no",
     "desired salary": "500$"}
      esc===:===wq

 11. Отправить изменения на внешний репозиторий.
     git status
     git add new.json
     git commit -m 'add new.json file'
     git push

 12. Создать файл preferences.json === touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.
 vim new.json===i
{"favotite movie": "Groundhog Day",
"favotite serial": "Supernatural",
"favotite food": "Pasta alla carbonara",
"favorite season": "sammer",
"Id like to visit": "Portugal"}
esc===:===wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch sklls.json
vim sklls.json
i
"skills":
{"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC",
"Что такое клиент серверная архитектура",
"Методы запросов на сервер",
"Ответы сервера",
"Структуры запросов и ответов",
"Что такое JSON, XML. Их структура",
"Тестирование API",
"Снятие и чтение логов",
"Postman, Fidler",
"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)",
"Dev Tools веб браузеров (Google Chrome, FireFox)",
"Мобильное тестирование",
"Особенность iOS, Android, гайдлайны",
"Сборка iOS приложений на XCode",
"Сборка Android приложений на Android Studio",
"Перехват мобильного трафика (сниффинг) через Charles",
"Настройка прокси на iOS и Android",
"Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса", 
"Простой bash скриптринг , автоматизация рутинных задач на сервере",
"Доступ к удалённым серверам",
"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)",
"Git",
"Jmeter",
"Методология разработки Scrum",
"Python. Создание собственного клиент-серверного приложения"}
esc==:wq
 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git status
git commit -m "add preferences.json, sklls.json files"
git push

 16. На веб интерфейсе создать файл bug_report.json.
Add file
Creat new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. === edit this file
{"Не запускается мобильное приложение после нажатия на иконку на рабочем столе"}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--- Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON === git pull


XML
 21. Создать внешний репозиторий c названием XML. === https://github.com/ === new === Repository name===XML
 22. Клонировать репозиторий XML на локальный компьютер.===git clone https://github.com/OlgaNaumovich/XML.git
 23. Внутри локального XML создать файл “new.xml”.=== touch new.xml
 24. Добавить файл под гит.=== git add new.xml
 25. Закоммитить файл === git commit -m "add new.xml file"
 26. Отправить файл на внешний GitHub репозиторий. === git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<?xml version="1.0" encoding="utf-8" ?>
< Name >Naumovich Olga</ Name >
< Age >32</ 32 >
< Pets >no</ pets >
< desired salary >500$</ desired salary >
 esc===:===wq
 28. Отправить изменения на внешний репозиторий.
     git status
     git add new.xml
     git commit -m 'add new.xml file'
     git push
 29. Создать файл preferences.xml === touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML
 vim new.xml
<?xml version="1.0" encoding="utf-8" ?>
< favotite movie >Groundhog Day</ favotite movie >
< favotite serial >Supernatural</ favotite serial >
< favotite food >Pasta alla carbonara</ favotite food >
< favorite season >sammer</favorite season >
< Id like to visit >Portugal</ < Id like to visit >
esc===:===wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat sklls.xml
<skills>
< один >Что такое клиент серверная архитектура</ один >
< два >Методы запросов на сервер</ два >
< три >Ответы сервера</ три >
< четыре >Структуры запросов и ответов</ четыре >
< пять >Что такое JSON, XML. Их структура</ пять >
< шесть >Тестирование API</ шесть >
< семь >Снятие и чтение логов</ семь >
< восемь >Postman, Fidler</ восемь >
< девять >VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)</ девять >
< десять >Dev Tools веб браузеров (Google Chrome, FireFox)</ десять >
< одиннадцать >Мобильное тестирование</ одиннадцать >
< двенадцать >Особенность iOS, Android, гайдлайны</ двенадцать >
< тринадцать >Сборка iOS приложений на XCode</ тринадцать >
< четырнадцать >Сборка Android приложений на Android Studio</ четырнадцать >
< пятнадцать >Перехват мобильного трафика (сниффинг) через Charles</ пятнадцать >
< шестнадцать >Настройка прокси на iOS и Android</ шестнадцать >
< семнадцать >Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса</ семнадцать > 
< восемнадцать >Простой bash скриптринг , автоматизация рутинных задач на сервере</ восемнадцать >
< девятнадцать >Доступ к удалённым серверам</ девятнадцать >
< двадцать >Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)</ двадцать >
< двадцать один >Git</ двадцать один >
< двадцать два >Jmeter</ двадцать два >
< двадцать три >Методология разработки Scrum</ двадцать три >
< двадцать четыре >Python. Создание собственного клиент-серверного приложения</ двадцать четыре >
</ skills >
 32. Сделать коммит в одну строку.===git add -A && git commit -m "add sklls.xml file"
 33. Отправить сразу 2 файла на внешний репозиторий.======git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.===Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<?xml version="1.0" encoding="utf-8" ?>
<Не запускается мобильное приложение после нажатия на иконку на рабочем столе>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
=== Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
git pull
TXT
 1. Создать внешний репозиторий c названием TXT.===https://github.com/ === new === Repository name===TXT 
 2. Клонировать репозиторий TXT на локальный компьютер.=== git clone https://github.com/OlgaNaumovich/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. === touch new.txt
 4. Добавить файл под гит.=== git add new.txt
 5. Закоммитить файл. === git commit -m "add new.txt file"
 6. Отправить файл на внешний GitHub репозиторий.=== git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 vim new.txt
Наумович Ольга Александровна
32 года
Домашних животных нет
Желаемая зп 500у.е
esc===:===wq
8. Отправить изменения на внешний репозиторий.
     git add new.txt
     git commit -m 'add new.txt file'
     git push
 9. Создать файл preferences.txt === touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 vim preferences.txt
Любимый фильм-Время
Любимый сериал-Секретные материалы
Любимая еда-пицца
Любимая пора года-Лето
Страна, которую хотела бы посетить-Португалия
esc===:===wq
11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT === touch sklls.txt
vim sklls.txt
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC
2. Что такое клиент серверная архитектура.
3. Методы запросов на сервер.
4. Ответы сервера.
5. Структуры запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API.
8. Снятие и чтение логов.
9. Postman, Fidler.
10. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
11. Dev Tools веб браузеров (Google Chrome, FireFox).
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode
15. Сборка Android приложений на Android Studio
16. Перехват мобильного трафика (сниффинг) через Charles
17. Настройка прокси на iOS и Android.
18. Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса. 
19. Простой bash скриптринг , автоматизация рутинных задач на сервере.
20. Доступ к удалённым серверам.
21. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join
22. Git
23. Jmeter
24. Методология разработки Scrum
25. Python. Создание собственного клиент-серверного приложения.
esc===:===wq
 12. Сделать коммит в одну строку.=== git add -A && git commit -m "add sklls.txt file"
 13. Отправить сразу 2 файла на внешний репозиторий.=== git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.===Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
=== Не запускается мобильное приложение после нажатия на иконку на рабочем столе
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull