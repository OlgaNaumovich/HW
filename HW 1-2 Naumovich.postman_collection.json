{
	"info": {
		"_postman_id": "f16ee9bc-b9e0-4309-82f4-7c69c6a87df4",
		"name": "HW 1/2 Naumovich",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HW1 get_method",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/get_method?name=olga&age=32",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "olga"
						},
						{
							"key": "age",
							"value": "32"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW1 user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"    \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW1 object_info_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name=olga&age=32&weight=62",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "olga"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "weight",
							"value": "62"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW1 object_info_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=olga&age=32&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "olga"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW1 object_info_3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=olga&age=32&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "olga"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW1 object_info_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=olga&age=32&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "olga"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW1 user_info_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2 user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"http://162.55.220.72:5005/user_info_3\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"  \r",
							"});\r",
							"//.3 Спарсить response body в json\r",
							"var response = pm.response.json();\r",
							"console.log(response)\r",
							"//.4 Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"check name\", function () {\r",
							"pm.expect(response.name).to.eql(\"olga\")    \r",
							"   });\r",
							"//.5 Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"check age\", function () {\r",
							"pm.expect(response.age).to.eql('32')\r",
							"})\r",
							"//.6 Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"check salary\", function () {\r",
							"pm.expect(response.salary).to.eql(500)\r",
							"    })\r",
							"//.7 Спарсить request\r",
							"var request=request.data\r",
							"console.log(request)\r",
							"//.8 Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check name request\"),function(){\r",
							"    pm.expect(response.name).to.eql(request.name)\r",
							"};\r",
							"//.9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"check age request\"),function(){\r",
							"    pm.expect(response.age).to.eql(request.age)};\r",
							"//.10 Проверить, что salary в ответе равно salary s request (salary забрать из request.)    \r",
							"pm.test(\"check salary request\"),function(){\r",
							" pm.expect(response.salary).to.eql(request.salary)};\r",
							" //.11 Вывести в консоль параметр family из response.\r",
							" console.log(response.family)\r",
							" //.12 Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							" pm.test(\"check u_salary_1_5_year\"),function(){\r",
							"     pm.expect(response.family.u_salary_1_5_year).to.eql(request.salay*4)\r",
							" }"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2 object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"http://162.55.220.72:5005/object_info_3\r",
							"//.2 Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//.3 Спарсить response body в json\r",
							"var response=pm.response.json();\r",
							"//.4  Спарсить request\r",
							"var request=pm.request.url.query.toObject()\r",
							"//.5 Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check name\", function(){\r",
							"    var name=pm.request.url.query.get(\"name\")\r",
							"pm.expect(response.name).to.eql(\"olga\")});\r",
							"//.6  Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"check age\",function(){\r",
							"    var age=pm.request.url.query.get(\"age\")\r",
							"    pm.expect(response.age).to.eql(\"32\")\r",
							"});\r",
							"//.7 Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"check salary\", function(){\r",
							"    var salary=pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.salary).to.eql(500)\r",
							"});\r",
							"//.8  Вывести в консоль параметр family из response.\r",
							"console.log(response.family)\r",
							"//.9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"check name dog\",function(){\r",
							"    pm.expect(response.family.pets.dog).to.have.property(\"name\")\r",
							"})\r",
							"//.10  Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"check dog age\",function(){\r",
							"    pm.expect(response.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"//.11  Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"check name Luky\", function(){\r",
							"    pm.expect(response.family.pets.dog.name).to.eql(\"Luky\")\r",
							"})\r",
							"//.12  Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"check age_4\", function(){\r",
							"    pm.expect(response.family.pets.dog.age).to.eql(4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=olga&age=32&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "olga"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2 object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//.1 Отправить запрос.\r",
							"http://162.55.220.72:5005/object_info_4\r",
							"//.2 Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//.3  Спарсить response body в json\r",
							"var response=pm.response.json();\r",
							"//.4 Спарсить request\r",
							"var request=pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check name\", function(){\r",
							"   var name=pm.request.url.query.get(\"name\")\r",
							"    pm.expect(response.name).to.eql(\"olga\")\r",
							"})\r",
							"//.6 Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test (\"check age\", function(){\r",
							"    var age=pm.request.url.query.get(\"age\")\r",
							"    pm.expect(response.age).to.eql(32)\r",
							"})\r",
							"var salary=pm.request.url.query.get(\"salary\")\r",
							"//.7 Вывести в консоль параметр salary из request.\r",
							"console.log(request.salary);\r",
							"//.8 Вывести в консоль параметр salary из response.\r",
							"console.log(response.salary);\r",
							"//.9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(response.salary[0]);\r",
							"//.10 Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(response.salary[1]);\r",
							"//.11  Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(response.salary[2])\r",
							"//.12  Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test('check 0 salary', function (){\r",
							"    var salary= +pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.salary[0]).to.eql(salary)\r",
							"})\r",
							"var salary= +pm.request.url.query.get(\"salary\")\r",
							"//.13  Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test('check 1 salary', function (){\r",
							"    pm.expect(+response.salary[1]).to.eql(salary*2)})\r",
							" //.14  Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.) \r",
							" pm.test('check 2 salary', function (){\r",
							"    pm.expect(+response.salary[2]).to.eql(salary*3)})\r",
							"//. 15.16.17 Создать в окружении переменную name, age, salary\r",
							"//. 18  Передать в окружение переменную name\r",
							"pm.environment.set(\"name\",\"olga\");\r",
							"// .19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\",32);\r",
							"//. 20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\",500);\r",
							"//. 21  Написать цикл который выведет в консоль по порядку элементы списка из параметра salary."
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2 first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//.1 Отправить запрос\r",
							"http://162.55.220.72:5005/first\r",
							"//.2 . Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//.3 Проверить, что в body приходит правильный string\r",
							"pm.test(\"check string\", function(){\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2 user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// .1 Вставить параметр salary из окружения в request\r",
							"// .2 Вставить параметр age из окружения в age\r",
							"// .3 Вставить параметр name из окружения в name\r",
							"// .4 Отправить запрос.\r",
							" http://162.55.220.72:5005/user_info_2\r",
							"//. 5 Статус код 200\r",
							" pm.test(\"Status code is 200\", function () {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							" //. 6 Спарсить response body в json. \r",
							"var response = JSON.parse(responseBody);\r",
							"//.7  Спарсить request.\r",
							"var request = request.data\r",
							"// .8 Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test (\"check  property start_qa_salary\", function(){\r",
							"pm.expect(response).to.have.property(\"start_qa_salary\")})\r",
							"//.9 Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"check property qa_salary_after_6_months\", function(){\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_6_months\")\r",
							"})\r",
							"//.10 Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"check property qa_salary_after_12_months\", function(){\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_12_months\")})\r",
							" \r",
							" //. 11 Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							" pm.test(\"check property qa_salary_after_1.5_year\", function(){\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_1.5_year\")})\r",
							"\r",
							" //.12  Проверить, что json response имеет параметр qa_salary_after_3.5_years \r",
							"pm.test(\"check property qa_salary_after_3.5_years\", function(){\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_3.5_years\")})\r",
							"//.13  Проверить, что json response имеет параметр person\r",
							"pm.test(\"check property person\", function(){\r",
							"    pm.expect(response).to.have.property(\"person\")})\r",
							"\r",
							"//.14  Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"check start_qa_salary\", function(){\r",
							"    var start_qa_salary=pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.start_qa_salary).to.eql(+request.salary)\r",
							"})\r",
							"\r",
							"//. 15 . Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months\", function(){\r",
							"    var qa_salary_after_6_months=pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.qa_salary_after_6_months).to.eql(request.salary*2)})\r",
							"  //. 16 Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"  pm.test(\"qa_salary_after_12_months\", function(){\r",
							"    var qa_salary_after_12_months=pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.qa_salary_after_12_months).to.eql(request.salary*2.7)})  \r",
							"//.17 Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year\", function(){\r",
							"    var qa_salary_after_1=pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response[\"qa_salary_after_1.5_year\"]).to.eql(request.salary*3.3)})\r",
							"//.18  Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years\", function(){\r",
							"    var qa_salary_after_3=pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response[\"qa_salary_after_3.5_years\"]).to.eql(request.salary*3.8)})\r",
							"\r",
							" //.19 Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"    pm.test(\"check person u_name\", function(){\r",
							"     var u_name =pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.person.u_name[1]).to.eql(+request.salary)})\r",
							"\r",
							"    //20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"    pm.test(\"check person u_age\", function(){\r",
							"     var u_age =pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.person.u_age).to.eql(+request.age)})\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"check u_salary_5_years\", function(){\r",
							"     var u_salary_5_years =pm.request.url.query.get(\"salary\")\r",
							"    pm.expect(response.person.u_salary_5_years).to.eql(+request.salary*4.2)})\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}